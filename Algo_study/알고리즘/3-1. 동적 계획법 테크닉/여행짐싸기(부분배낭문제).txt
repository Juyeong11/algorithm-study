#include<iostream>
#include<vector>
#include<string>
#include<cstring>


using namespace std;

int packing(int, int);
void reconstruct(int capacity,int item, vector<string>& picked);

int cache[1001][101];
string name[100];
int need[100];
int weight[100];

const string tmp[]={"laptop","camera","xbox","grinder","dumbell","encyclopedia"};
const int tmp_ne[]={7,10,6,7,5,4};
const int tmp_we[]={4,2,6,4,2,10};

const int n = 6;//물건 갯수라는 뜻
const int w = 17;//최대무개라는 뜻
int main()
{
	memset(cache, -1, sizeof(cache));
	
	vector<string> pick(0);
	reconstruct(17,0, pick);
	
	for(string a:pick)
		cout<<a<<endl;
//	cout<<tmp_we[1];
}

int packing(int capacity, int item)
{
	if(item == n) return 0;
	
	int& ret = cache[capacity][item];
	
	if(ret != -1) return ret;
	
	ret = packing(capacity, item + 1);//부분문제 가방에 안 넣는다
	
	if(capacity >= tmp_we[item])
		ret = max(ret, packing(capacity - tmp_we[item], item + 1) + tmp_ne[item]);//부분문제 가방에 넣는다
	
	return ret;
}

void reconstruct(int capacity,int item, vector<string>& picked)
{
	if(item == n) return;
	
	if(packing(capacity,item) == packing(capacity, item + 1))
	{
		reconstruct(capacity,item + 1,picked);
	}
	else
	{
		picked.push_back(tmp[item]);
		reconstruct(capacity - tmp_we[item],item + 1,picked);
	}
	
}