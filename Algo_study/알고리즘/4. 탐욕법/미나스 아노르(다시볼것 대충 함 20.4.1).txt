#include<iostream>
#include<vector>
#include<algorithm>

#include<cmath>

using namespace std;

const int INF = 987654321;
const double pi = 2.0 * acos(0);
int n = 4;
double y[100],x[100],r[100];
pair<double,double> ranges[100];
void convertToRange()
{
	for(int i=0; i<n; ++i)
	{
		double loc = fmod(2*pi + atan2(y[i], x[i]), 2*pi);
		double range = 2.0 * asin(r[i]/2.0/8.0);//-> 왜 이렇게 하는거지?
		ranges[i] = make_pair(loc - range, loc + range);
	}
	
	sort(ranges,ranges+n);
}

int solveLinear(double begin, double end)//
{
	int used = 0, idx = 0;
	
	while(begin < end)
	{
		double maxCover = -1;
		while(idx < n && ranges[idx].first<=begin){
			maxCover = max(maxCover, ranges[idx].second);
			idx++;
		}
		
		if(maxCover <= begin) return INF;
		
		begin = maxCover;
		++used;
	}
	
	return used;
}
int solveCircular()
{
	int ret = INF;
	
	sort(ranges,ranges+n);
	
	for(int i = 0; i<n; ++i)
	{
		if(ranges[i].first <= 0 || ranges[i].second >= 2*pi)
		{
			double begin = fmod(ranges[i].second, 2*pi);
			double end = fmod(ranges[i].first + 2*pi, 2*pi);
			
			ret = min(ret, 1+solveLinear(begin,end));
		}
		
	}
	
	return ret;
}
int main()
{
	y[0]=8.0; 		 x[0] = 0.0;
	y[1]=0.0; 		 x[1] = -8.0;
	y[2]=-8.0;		 x[2] = -0.0;
	y[3]=1.25147572; x[3] = 7.90150672;
	
	r[0] = 8.0;
	r[1] = 8.0;
	r[2] = 8.0;
	r[3] = 5.40;
	
	cout<<solveCircular()<<endl;
}