#include<iostream>
#include<cstring>

int cover(int[][9]);

using namespace std;

int H=0;//행
int W=0;//열
char board[20][20]={"\0",};
int _board[20][20]={-1,};

const int _x[4]={-1,-1, 1,1};//┐,┘,└,┌
const int _y[4]={ 1,-1,-1,1};
int main()
{
	int test_case=0;
	/* 예제 입력
	cin>>H>>W;
	
	for(int i=0;i<H;i++)
		cin>>board[i];
		
	for(int i=0;i<H;++i)
		for(int j=0;j<W;++j)
		{
			if(strcmp(board[i][j],"#"))
				_board[i][j]=0;
			elseif(strcmp(board[i][j],"."))
				_board[i][j]=1;
		}
	*/

	H=3;
	W=7;
	int tmp_board[5][9]={
		{0,0,0,0,0,0,0,0,0},
		{0,0,1,1,1,1,1,0,0},
		{0,0,1,1,1,1,1,0,0},
		{0,0,0,1,1,0,0,0,0},
		{0,0,0,0,0,0,0,0,0}
	};
	
	cout<<cover(tmp_board)<<endl;
}

int cover(int tmp_board[][9])
{
	int tmp_x=-1,tmp_y=-1;
	int count_white=0;
	
	for(int y=0;y<H+2;++y)
		for(int x=0;x<W+2;++x)
			if(tmp_board[y][x]==1)
			{
				++count_white;
			}
	
	if(count_white%3 != 0)//1. 기저사례
	{
		cout<<endl;
	}
	
	if(count_white == 0)
	{
		return 1;
	}
	
	for(int y=0;y<H+2;++y)//비어있는 블록을 찾음
	{
		for(int x=0;x<W+2;++x)
		{
			if(tmp_board[y][x] == 1)
			{
				
				tmp_x = x;
				tmp_y = y;
				
				break;
			}
		}
		if(tmp_x != -1)
			break;
	}
	
	//cout<<tmp_y<<tmp_x<<endl;
	int ret = 0;
	
	for(int y=1;y<H+1;++y)
		for(int x=1;x<W+1;++x)
		{
			for(int i=0;i<4;++i)
				if(tmp_board[y+_y[i]][x] == 1 && tmp_board[y][x+_x[i]] == 1 && tmp_board[y][x] == 1)
				{
					tmp_board[y+_y[i]][x] = 0; tmp_board[y][x+_x[i]] = 0; tmp_board[y][x] = 0;
		
					ret += cover(tmp_board);
					tmp_board[y+_y[i]][x] = 1; tmp_board[y][x+_x[i]] = 1; tmp_board[y][x] = 1;
				}
		}
	return ret;
}